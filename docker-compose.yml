services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/formlytic
      - staticfiles_data:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy 
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            python manage.py migrate &&
            uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --workers 4"
             
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/formlytic
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bash", "-c", "PYTHONPATH=/app/formlytic celery -A config.celery worker --loglevel=info"]

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/formlytic
      - runtime_data:/app/formlytic/runtime
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["bash", "-c", "PYTHONPATH=/app/formlytic celery -A config.celery beat --loglevel=info --schedule=/app/formlytic/runtime/celerybeat-schedule"]

  redis:
    image: redis:7.4
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16.9
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  staticfiles_data:
  runtime_data:
  redis_data:
  postgres_data: